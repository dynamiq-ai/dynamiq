connections:
  openai-conn:
    type: dynamiq.connections.OpenAI

nodes:
  memory-agent:
    type: dynamiq.nodes.agents.react.ReActAgent
    llm:
      id: react-agent-llm
      type: dynamiq.nodes.llms.OpenAI
      connection: openai-conn
      model: gpt-4o
    tools:
      - id: python-file-tool
        type: dynamiq.nodes.tools.python.Python
        code: |
          def run(input_data):
              """
              Python function that demonstrates file processing operations.
              This tool can process files that are passed to it via the files parameter.
              """
              # Get files from input data if any
              files = input_data.get('files', [])

              result = {'file_count': len(files)}

              return result
        description: "Python tool for analysis of filesystem. Use it to check if file exists"
        is_files_allowed: true
    role: "a helpful assistant capable of retaining context and answering questions effectively using file storage."
    file_store:
      enabled: true
      backend:
        type: dynamiq.storages.file.InMemoryFileStore
      agent_file_write_enabled: true
    max_loops: 5
    inference_mode: XML

flows:
  memory-agent-flow:
    name: Memory Agent Flow
    nodes:
      - memory-agent

workflows:
  memory-agent-workflow:
    flow: memory-agent-flow
    version: 1
